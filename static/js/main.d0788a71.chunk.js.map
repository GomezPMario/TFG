{"version":3,"sources":["components/images/LogoCAAB.png","components/Login.jsx","components/Consultas.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","React","createElement","className","onSubmit","async","e","preventDefault","console","log","response","axios","post","headers","Content-Type","status","err","_err$response","_err$response$data","data","message","src","logo","alt","type","id","value","onChange","target","placeholder","required","Consultas","App","Router","basename","process","Routes","Route","path","element","Consusltas","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mRC6EzBC,MApEDA,KACV,MAAOC,EAAUC,GAAeC,mBAAS,KAClCC,EAAUC,GAAeF,mBAAS,KAClCG,EAAOC,GAAYJ,mBAAS,IAE7BK,EAAWC,cA8BjB,OACIC,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAA,QAAMC,UAAU,aAAaC,SA9BjBC,UAChBC,EAAEC,iBACFT,EAAS,IAETU,QAAQC,IAAI,yBAA0B,CAAEjB,WAAUG,aAElD,IACI,MAAMe,QAAiBC,IAAMC,KAAK,kCAAwB,CACtDpB,WACAG,YACD,CACCkB,QAAS,CACLC,eAAgB,sBAIxBN,QAAQC,IAAI,YAAaC,GAED,MAApBA,EAASK,SACTP,QAAQC,IAAI,oBACZV,EAAS,eAEf,MAAOiB,GAAK,IAAAC,EAAAC,EACVV,QAAQX,MAAM,eAAgBmB,GAC9BlB,GAAqB,QAAZmB,EAAAD,EAAIN,gBAAQ,IAAAO,OAAA,EAAM,QAANC,EAAZD,EAAcE,YAAI,IAAAD,OAAA,EAAlBA,EAAoBE,UAAW,wBAOpCnB,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKmB,IAAKC,IAAMC,IAAI,OAAOpB,UAAU,gBAEzCF,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SACIsB,KAAK,OACLC,GAAG,WACHC,MAAOlC,EACPmC,SAAWrB,GAAMb,EAAYa,EAAEsB,OAAOF,OACtCG,YAAY,UACZC,UAAQ,KAGhB7B,IAAAC,cAAA,OAAKC,UAAU,cACXF,IAAAC,cAAA,SACIsB,KAAK,WACLC,GAAG,WACHC,MAAO/B,EACPgC,SAAWrB,GAAMV,EAAYU,EAAEsB,OAAOF,OACtCG,YAAY,gBACZC,UAAQ,KAGhB7B,IAAAC,cAAA,UAAQsB,KAAK,SAASrB,UAAU,gBAAe,qBAC9CN,GAASI,IAAAC,cAAA,OAAKC,UAAU,iBAAiBN,MC7D3CkC,MARGA,IAEV9B,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAI,YCYD8B,MAXf,WACE,OACE/B,IAAAC,cAAC+B,IAAM,CAACC,SAAUC,QAChBlC,IAAAC,cAACkC,IAAM,KACLnC,IAAAC,cAACmC,IAAK,CAACC,KAAK,IAAIC,QAAStC,IAAAC,cAACX,EAAK,QAC/BU,IAAAC,cAACmC,IAAK,CAACC,KAAK,aAAaC,QAAStC,IAAAC,cAACsC,EAAU,WCCtCC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCtD,EAAAiB,EAAA,GAAAsC,KAAAvD,EAAAwD,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvD,IAAAC,cAACD,IAAMwD,WAAU,KACfxD,IAAAC,cAAC8B,EAAG,QAORS","file":"static/js/main.d0788a71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoCAAB.735869f8.png\";","import React, { useState } from 'react';\nimport './styles/Login.css';\nimport logo from '../components/images/LogoCAAB.png';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n\nconst baseURL = 'http://localhost:5000';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const navigate = useNavigate(); // Hook para redirección\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setError('');\n\n        console.log('Sending login request:', { username, password });\n\n        try {\n            const response = await axios.post(`${baseURL}/api/login`, {\n                username,\n                password\n            }, {\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            console.log('Response:', response);\n\n            if (response.status === 200) {\n                console.log('Login successful');\n                navigate('/consultas');\n            }\n        } catch (err) {\n            console.error('Login error:', err);\n            setError(err.response?.data?.message || 'An error occurred');\n        }\n    };\n\n    return (\n        <div className=\"login-container\">\n            <form className=\"login-form\" onSubmit={handleLogin}>\n                <div className=\"logo-container\">\n                    <img src={logo} alt=\"Logo\" className=\"logo-image\" />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Usuario\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Contraseña\"\n                        required\n                    />\n                </div>\n                <button type=\"submit\" className=\"login-button\">Iniciar Sesión</button>\n                {error && <div className=\"error-message\">{error}</div>}\n            </form>\n        </div>\n    );\n};\n\nexport default Login;","import React from 'react';\n\nconst Consultas = () => {\n    return (\n        <div>\n            <h2>testing</h2>\n        </div>\n    );\n};\n\nexport default Consultas;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './components/Login';\nimport Consusltas from './components/Consultas';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/consultas\" element={<Consusltas />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}